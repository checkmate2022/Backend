plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.asciidoctor.convert" version "1.5.3"
    id 'java'
}

group = 'com.checkmate'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    }
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = "build/generated-snippets"
}

asciidoctor {
    dependsOn test // (2)
}

test {
//    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE"
}

bootJar {
    dependsOn asciidoctor // (3)
    from("${asciidoctor.outputDir}/html5") { // (4)
        into "BOOT-INF/classes/static/docs"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // swagger API
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
    //Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    //H2 DB
    runtimeOnly 'com.h2database:h2:1.4.200'
    // Configuration
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    //test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // Gradle
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //embedded-redis
    implementation('it.ozimov:embedded-redis:0.7.2') { exclude group: "org.slf4j", module: "slf4j-simple" }
//    //gson
//    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'
    //openvidu
    implementation 'io.openvidu:openvidu-java-client:2.20.0'
// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation 'com.google.firebase:firebase-admin:7.1.1'
// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3'

    //google DialogFlow
    implementation platform('com.google.cloud:libraries-bom:26.1.0')
    implementation group: 'com.google.cloud', name: 'google-cloud-dialogflow', version: '4.8.0'
    implementation 'com.google.apis:google-api-services-dialogflow:v2beta1-rev98-1.25.0'
    //mariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4'
}

tasks.named('test') {
    useJUnitPlatform()
}
